;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("python3.6m/Python.h" include (:system-flag t) nil [1 31])
            ("spam_system" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("self" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [63 78])
                    ("args" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [79 94]))                  
                :type ("PyObject" type (:type "class") nil nil))
                nil [33 266])
            ("SpamMethods" variable
               (:dereference 1
                :typemodifiers ("static")
                :default-value "{
    { \"system\",  spam_system, METH_VARARGS, \"Execute a shell command.\" },
    { NULL, NULL, 0, NULL }        /* Sentinel */
}"
                :type ("PyMethodDef" type (:type "class") nil nil))
                nil [268 431])
            ("spammodule" variable
               (:typemodifiers ("static")
                :default-value "{
  PyModuleDef_HEAD_INIT,
  \"spam\",   /* name of module */
  \"test string\", /* module documentation, may be NULL */
  -1,       /* size of per-interpreter state of the module,
	       or -1 if the module keeps state in global variables. */
  SpamMethods
}"
                :type ("PyModuleDef" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [433 729])
            ("PyInit_spam" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [758 763]))                  
                :type ("PyMODINIT_FUNC" type (:type "class") nil nil))
                nil [731 808]))          
      :file "hello.c"
      :pointmax 809
      :fsize 808
      :lastmodtime '(23272 35220 608473 321000)
      :unmatched-syntax nil))
  :file "!home!marcus!Programming!CPython!MyCModule!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
